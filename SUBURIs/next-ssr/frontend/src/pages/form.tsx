import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import styles from "../../styles/Home.module.css";
import { useForm } from "react-hook-form";
import { FormEvent, useEffect, useState } from "react";

const Home: NextPage = () => {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [dummy, setDummy] = useState<string[]>([]);
  const {
    register,
    handleSubmit,
    formState: { isSubmitting: isSubmittingRHF },
  } = useForm<{ input: string }>();

  const requset = async (input: string) => {
    await fetch("/api/response", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ input }),
    });
  };

  const onSubmitRaw = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    console.log("onSubmitRaw");

    const target = e.target as any;
    const value = target.value as string;
    if (isSubmitting) {
      return;
    }
    setIsSubmitting(true);
    await requset(value);
    setIsSubmitting(false);
  };

  const onSubmitRHF = async (data: { input: string }) => {
    if (isSubmittingRHF) {
      return;
    }
    await requset(data.input);
  };

  useEffect(() => {
    const now = new Date();

    const dummyArray = Array.from(
      { length: 20000 },
      (_, i) => `${i}:${now.toISOString()}`
    );
    setDummy(dummyArray);
  }, [isSubmitting]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Form</h1>
        <div>
          <h2>Pure React</h2>
          <form onSubmit={onSubmitRaw}>
            <input type="text" name="input" />
            <button disabled={isSubmitting}>submit</button>
          </form>
        </div>
        <div>
          <h2>With React Hook Form</h2>
          <form onSubmit={handleSubmit(onSubmitRHF)}>
            <input {...register("input")} />
            <button disabled={isSubmittingRHF}>submit</button>
          </form>
        </div>

        {/* {dummy.map((i) => (
          <div key={i}>dummy: {i}</div>
        ))} */}
      </main>
    </div>
  );
};

export default Home;
